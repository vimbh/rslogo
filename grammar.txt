## This defines RSLOGO's Context Free Grammar in BNF.

<program> ::= (<expression> | <statement>)+ | <word>::seperated by newlines
            
## Expressions return either float or bool values, or are a raw string.
<expression> ::= <num_expression>
               | <logic_expression>

<num_expression> ::= <arith_expression>
                   | <query_expression>
                   | <ident_ref>
                   | <Num>

<logic_expression> ::= <comparison_expression> 
                    | <boolean_expression>
                    | <ident_ref>

## Statements describe some state transformation.
<statement> ::= <make> 
              | <add_assign>
              | <draw_instruction> 
              | <if> 
              | <while>
              | <pen_status_update> 
              | <pen_color_update> 
              | <pen_pos_update>
              | <procedure>
              | <procedure_reference>

<arith_expression> ::= <arithmetic_operator> <num_expression> <num_expression>

<comparison_expression> ::= <comparison_operator> <num_expression> <num_expression>
                          | ("EQ"|"NE") <boolean_expression> <boolean_expression>
                          | ("EQ"|"NE") <word> <word>
                        
<logic_expression> ::= <boolean_operator> <boolean_expression> <boolean_expression>
                     | ("EQ" | "NE")    

<query_expression> ::= <query_kind>

<make> ::= "MAKE" <identifier> (<expression> | <word>)

<add_assign> ::= "ADDASSIGN" <identifier> <num_expression>

<draw_instruction> ::= <direction> <num_expression>

<if_expression> ::= "IF" <logic_expression> "[" <program> "]"

<while_expression> ::= "WHILE" <expression> "[" <program> "]"

<pen_color_update> ::= "PENCOLOR" <num_expression>

<pen_pos_update> ::= <pen_position> <num_expression>

<procedure> ::= "TO" <identifier> <identifier>* <program> "END"

<procedure_reference_expression> ::= <identifier> <identifier>*

## Terminals
<identifier> := String

<ident_ref> ::= <Num> 
              | <Bool>

<Bool> ::= True 
         | False

<Num> ::= f32

<pen_status_update> ::= "PENUP" | "PENDOWN"

<direction> ::= "FORWARD" | "BACK" | "RIGHT" | "LEFT"

<arithmetic_operator> ::= "+" | "-" | "*" | "/"

<comparison_operator> ::= "EQ" | "NE" | "LT" | "GT"

<boolean_operator> ::= "AND" | "OR"

<pen_position> ::= "SETX" | "SETY" | "SETHEADING" | "TURN"

<query_kind> ::= "XCOR" | "YCOR" | "HEADING" | "COLOR"

